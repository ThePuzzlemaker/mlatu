define divisible (nat, nat -> bool +fail) { % 0 eq }

define fizzbuzz (nat -> string) {
  -> n;
  do (with (+fail)) { n 5 divisible n 3 divisible }
  if { if { "FizzBuzz" } else { "Fizz" } }
  else { if { "Buzz" } else { n show } }
}

define fizzbuzzes (nat, nat -> +io) {
  -> c, m;
  c fizzbuzz println
  if (c m lt) { c succ m fizzbuzzes }
  else {}
}

1 100 fizzbuzzes
