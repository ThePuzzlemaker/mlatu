permission Fail[R..., S..., +P] (R..., (R... -> S... +Fail +P) -> S... +P):
  with (+Fail)

permission Exit[R..., S..., +P] (R..., (R... -> S... +Exit +P) -> S... +P):
  with (+Exit)

vocab mlatu {
  intrinsic abort[R..., S...] (R..., String -> S... +Fail)
  intrinsic exit[R..., S...] (R..., Int -> S... +Exit)
}

define abort[R..., S...] (R... -> S... +Fail):
  "abort called" fail

define exit[R..., S...] (R..., Int -> S... +Exit):
  _::mlatu::exit

define fail[R..., S...] (R..., String -> S... +Fail):
  _::mlatu::abort

define assert[+P] (String, (-> Bool +P) -> +Fail +P):
  -> message, test;
  do (with (-Fail)):
    test call
  if (not):
    message fail

define assert_eq[T] (String, T, T -> +Fail):
  -> message, x, y;
  message { x = y } assert