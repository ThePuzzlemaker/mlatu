define abort-now (for R S . R -> S <fail>) { "abort called" fail-now }

define assert (for +p . string, (-> bool <p>) -> <fail + p>) {
  -> message, test;
  do (with (-fail)) { test call }
  if (not) { message fail-now }
  else { }
}

define assert-eq (for t . string, t, t -> <fail>) {
  -> x, y;
  { x y eq } assert
}

define exit-now (for R S . R, nat -> S <exit>) { "exit" extern }

define fail-now (for R S . R, string -> S <fail>) { "abort" extern }
